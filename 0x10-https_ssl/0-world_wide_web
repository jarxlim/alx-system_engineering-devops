#!/usr/bin/env bash
# shellcheck disable=SC2086
# Bash script that will display information about subdomains


display_info() {
  local domain="$1"
  local subdomain="$2"
  local subdomains=("www" "lb-01" "web-01" "web-02")

  for sub in "${subdomains[@]}"; do
    # Check if a specific subdomain is provided, and if so, only display its information
    if [ "$subdomain" ] && [ "$subdomain" != "$sub" ]; then
      continue
    fi

    # Determine the record type based on the subdomain
    if [ "$sub" == "www" ]; then
      record_type="CNAME"
      destination="lb-01 IP"
    elif [ "$sub" == "lb-01" ]; then
      record_type="CNAME"
      destination="lb-01 IP"
    elif [ "$sub" == "web-01" ]; then
      record_type="CNAME"
      destination="web-01 IP"
    elif [ "$sub" == "web-02" ]; then
      record_type="CNAME"
      destination="web-02 IP"
    else
      record_type="UNKNOWN"
      destination="UNKNOWN"
    fi

    # Display the subdomain information
    echo "The subdomain $sub is a $record_type record and points to $destination"
  done
}

# Check the number of arguments provided
if [ $# -lt 1 ]; then
  echo "Usage: $0 <domain> [subdomain]"
  exit 1
fi

domain="$1"
subdomain="$2"

# Configure the domain zone (You may need to replace this with actual commands to configure DNS)
# For demonstration purposes, we'll just print a message indicating configuration
echo "Configuring domain zone for $domain..."
echo "Adding subdomain www pointing to lb-01 IP"
echo "Adding subdomain lb-01 pointing to lb-01 IP"
echo "Adding subdomain web-01 pointing to web-01 IP"
echo "Adding subdomain web-02 pointing to web-02 IP"

# Display subdomain information
display_info "$domain" "$subdomain"

